{
  "Execute binaries from npm packages.\n%s": "Execute binaries from npm packages.\n%s",
  "Package to be installed.": "Package to be installed.",
  "Location of the npm cache.": "Location of the npm cache.",
  "Skip installation if a package is missing.": "Skip installation if a package is missing.",
  "Path to user npmrc.": "Path to user npmrc.",
  "Execute string as if inside `npm run-script`.": "Execute string as if inside `npm run-script`.",
  "Shell to execute the command with, if any.": "Shell to execute the command with, if any.",
  "Generate shell code to use npx as the \"command not found\" fallback.": "Generate shell code to use npx as the \"command not found\" fallback.",
  "Ignores existing binaries in $PATH, or in the local project. This forces npx to do a temporary install and use the latest version.": "Ignores existing binaries in $PATH, or in the local project. This forces npx to do a temporary install and use the latest version.",
  "npm binary to use for internal operations.": "npm binary to use for internal operations.",
  "For the full documentation, see the manual page for npx(1).": "For the full documentation, see the manual page for npx(1).",
  "Unable to guess a binary name from %s. Please use --package.": "Unable to guess a binary name from %s. Please use --package.",
  "\nERROR: You must supply a command.\n": "\nERROR: You must supply a command.\n",
  "Command failed: %s %s": "Command failed: %s %s",
  "Install for %s failed with code %s": "Install for %s failed with code %s",
  "%s not found. Trying with npx...": "%s not found. Trying with npx...",
  "command not found: %s": "command not found: %s",
  "options": "options",
  "command": "command",
  "version": "version",
  "command-arg": "command-arg",
  "command-string": "command-string",
  "shell": "shell",
  "package": "package",
  "npx: installed %s in %ss": "npx: installed %s in %ss",
  "Suppress output from npx itself. Subcommands will not be affected.": "Suppress output from npx itself. Subcommands will not be affected.",
  "Extra node argument when calling a node binary.": "Extra node argument when calling a node binary.",
  "Always spawn a child process to execute the command.": "Always spawn a child process to execute the command."
}