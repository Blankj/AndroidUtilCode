{
  "_args": [
    [
      "find-npm-prefix@1.0.2",
      "/Users/rebecca/code/npm"
    ]
  ],
  "_from": "find-npm-prefix@1.0.2",
  "_id": "find-npm-prefix@1.0.2",
  "_inBundle": false,
  "_integrity": "sha512-KEftzJ+H90x6pcKtdXZEPsQse8/y/UnvzRKrOSQFprnrGaFuJ62fVkP34Iu2IYuMvyauCyoLTNkJZgrrGA2wkA==",
  "_location": "/npm/find-npm-prefix",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "find-npm-prefix@1.0.2",
    "name": "find-npm-prefix",
    "escapedName": "find-npm-prefix",
    "rawSpec": "1.0.2",
    "saveSpec": null,
    "fetchSpec": "1.0.2"
  },
  "_requiredBy": [
    "/npm",
    "/npm/libcipm",
    "/npm/libnpm"
  ],
  "_resolved": "https://registry.npmjs.org/find-npm-prefix/-/find-npm-prefix-1.0.2.tgz",
  "_shrinkwrap": null,
  "_spec": "1.0.2",
  "_where": "/Users/rebecca/code/npm",
  "author": {
    "name": "Rebecca Turner",
    "email": "me@re-becca.org",
    "url": "http://re-becca.org/"
  },
  "bugs": {
    "url": "https://github.com/npm/find-npm-prefix/issues"
  },
  "dependencies": {},
  "description": "Find the npm project directory associated with for a given directory",
  "devDependencies": {
    "require-inject": "^1.4.2",
    "standard": "^10.0.3",
    "tap": "^10.7.3"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/npm/find-npm-prefix#readme",
  "keywords": [],
  "license": "ISC",
  "main": "find-prefix.js",
  "name": "find-npm-prefix",
  "optionalDependencies": {},
  "readme": "# find-npm-prefix\n\nFind the npm project directory associated with for a given directory\n\n## USAGE\n\n```\nconst findPrefix = require('find-npm-prefix')\n\nfindPrefix(process.cwd).then(prefix => {\n  …\n})\n```\n\n## findPrefix(dir) → Promise(prefix)\n\nThis computes the npm prefix, that is, the directory that npm adds and\nremoves modules from for a given path. \n\nIt takes a directory as an argument and returns a promise of the associated\nprefix directory.\n\n## Algorithm\n\n1. If the directory is a `node_modules` folder, scan up the tree till you find a non-`node_modules` directory and return that.\n2. Else, look for the first parent directory that contains a `node_modules` or a `package.json`\n  1. If one is found, that's the prefix.\n  2. If none are found, return the original directory we were given\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npm/find-npm-prefix.git"
  },
  "scripts": {
    "test": "standard && tap --100 test"
  },
  "version": "1.0.2"
}
