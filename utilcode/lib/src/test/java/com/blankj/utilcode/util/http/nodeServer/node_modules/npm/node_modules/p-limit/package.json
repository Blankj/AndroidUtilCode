{
  "_from": "p-limit@^1.1.0",
  "_id": "p-limit@1.2.0",
  "_inBundle": false,
  "_integrity": "sha512-Y/OtIaXtUPr4/YpMv1pCL5L5ed0rumAaAeBSj12F+bSlMdys7i8oQF/GUJmfpTS/QoaRrS/k6pma29haJpsMng==",
  "_location": "/npm/p-limit",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "p-limit@^1.1.0",
    "name": "p-limit",
    "escapedName": "p-limit",
    "rawSpec": "^1.1.0",
    "saveSpec": null,
    "fetchSpec": "^1.1.0"
  },
  "_requiredBy": [
    "/npm/p-locate"
  ],
  "_resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.2.0.tgz",
  "_shasum": "0e92b6bedcb59f022c13d0f1949dc82d15909f1c",
  "_shrinkwrap": null,
  "_spec": "p-limit@^1.1.0",
  "_where": "/Users/rebecca/code/npm/node_modules/p-locate",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-limit/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "p-try": "^1.0.0"
  },
  "deprecated": false,
  "description": "Run multiple promise-returning & async functions with limited concurrency",
  "devDependencies": {
    "ava": "*",
    "delay": "^2.0.0",
    "in-range": "^1.0.0",
    "random-int": "^1.0.0",
    "time-span": "^2.0.0",
    "xo": "*"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/p-limit#readme",
  "keywords": [
    "promise",
    "limit",
    "limited",
    "concurrency",
    "throttle",
    "throat",
    "rate",
    "batch",
    "ratelimit",
    "task",
    "queue",
    "async",
    "await",
    "promises",
    "bluebird"
  ],
  "license": "MIT",
  "name": "p-limit",
  "optionalDependencies": {},
  "readme": "# p-limit [![Build Status](https://travis-ci.org/sindresorhus/p-limit.svg?branch=master)](https://travis-ci.org/sindresorhus/p-limit)\n\n> Run multiple promise-returning & async functions with limited concurrency\n\n\n## Install\n\n```\n$ npm install p-limit\n```\n\n\n## Usage\n\n```js\nconst pLimit = require('p-limit');\n\nconst limit = pLimit(1);\n\nconst input = [\n\tlimit(() => fetchSomething('foo')),\n\tlimit(() => fetchSomething('bar')),\n\tlimit(() => doSomething())\n];\n\n(async () => {\n\t// Only one promise is run at once\n\tconst result = await Promise.all(input);\n\tconsole.log(result);\n})();\n```\n\n\n## API\n\n### pLimit(concurrency)\n\nReturns a `limit` function.\n\n#### concurrency\n\nType: `number`<br>\nMinimum: `1`\n\nConcurrency limit.\n\n### limit(fn)\n\nReturns the promise returned by calling `fn`.\n\n#### fn\n\nType: `Function`\n\nPromise-returning/async function.\n\n\n## Related\n\n- [p-queue](https://github.com/sindresorhus/p-queue) - Promise queue with concurrency control\n- [p-throttle](https://github.com/sindresorhus/p-throttle) - Throttle promise-returning & async functions\n- [p-debounce](https://github.com/sindresorhus/p-debounce) - Debounce promise-returning & async functions\n- [p-all](https://github.com/sindresorhus/p-all) - Run promise-returning & async functions concurrently with optional limited concurrency\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-limit.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.2.0"
}
