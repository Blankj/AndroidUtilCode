{
  "_from": "end-of-stream@^1.1.0",
  "_id": "end-of-stream@1.4.1",
  "_inBundle": false,
  "_integrity": "sha512-1MkrZNvWTKCaigbn+W15elq2BB/L22nqrSY5DKlo3X6+vclJm8Bb5djXJBmEX6fS3+zCh/F4VBK5Z2KxJt4s2Q==",
  "_location": "/npm/end-of-stream",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "end-of-stream@^1.1.0",
    "name": "end-of-stream",
    "escapedName": "end-of-stream",
    "rawSpec": "^1.1.0",
    "saveSpec": null,
    "fetchSpec": "^1.1.0"
  },
  "_requiredBy": [
    "/npm/duplexify",
    "/npm/mississippi",
    "/npm/pump",
    "/npm/pumpify/pump",
    "/npm/stream-each"
  ],
  "_resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz",
  "_shasum": "ed29634d19baba463b6ce6b80a37213eab71ec43",
  "_shrinkwrap": null,
  "_spec": "end-of-stream@^1.1.0",
  "_where": "/Users/rebecca/code/npm/node_modules/mississippi",
  "author": {
    "name": "Mathias Buus",
    "email": "mathiasbuus@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/end-of-stream/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "once": "^1.4.0"
  },
  "deprecated": false,
  "description": "Call a callback when a readable/writable/duplex stream has completed or failed.",
  "devDependencies": {},
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/mafintosh/end-of-stream",
  "keywords": [
    "stream",
    "streams",
    "callback",
    "finish",
    "close",
    "end",
    "wait"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "end-of-stream",
  "optionalDependencies": {},
  "readme": "# end-of-stream\n\nA node module that calls a callback when a readable/writable/duplex stream has completed or failed.\n\n\tnpm install end-of-stream\n\n## Usage\n\nSimply pass a stream and a callback to the `eos`.\nBoth legacy streams, streams2 and stream3 are supported.\n\n``` js\nvar eos = require('end-of-stream');\n\neos(readableStream, function(err) {\n  // this will be set to the stream instance\n\tif (err) return console.log('stream had an error or closed early');\n\tconsole.log('stream has ended', this === readableStream);\n});\n\neos(writableStream, function(err) {\n\tif (err) return console.log('stream had an error or closed early');\n\tconsole.log('stream has finished', this === writableStream);\n});\n\neos(duplexStream, function(err) {\n\tif (err) return console.log('stream had an error or closed early');\n\tconsole.log('stream has ended and finished', this === duplexStream);\n});\n\neos(duplexStream, {readable:false}, function(err) {\n\tif (err) return console.log('stream had an error or closed early');\n\tconsole.log('stream has finished but might still be readable');\n});\n\neos(duplexStream, {writable:false}, function(err) {\n\tif (err) return console.log('stream had an error or closed early');\n\tconsole.log('stream has ended but might still be writable');\n});\n\neos(readableStream, {error:false}, function(err) {\n\t// do not treat emit('error', err) as a end-of-stream\n});\n```\n\n## License\n\nMIT\n\n## Related\n\n`end-of-stream` is part of the [mississippi stream utility collection](https://github.com/maxogden/mississippi) which includes more useful stream modules similar to this one.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mafintosh/end-of-stream.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "1.4.1"
}
