{
  "_from": "inflight@^1.0.4",
  "_id": "inflight@1.0.6",
  "_inBundle": false,
  "_integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
  "_location": "/fsevents/inflight",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "inflight@^1.0.4",
    "name": "inflight",
    "escapedName": "inflight",
    "rawSpec": "^1.0.4",
    "saveSpec": null,
    "fetchSpec": "^1.0.4"
  },
  "_requiredBy": [
    "/fsevents/glob"
  ],
  "_resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
  "_shasum": "49bd6331d7d02d0c09bc910a1075ba8165b56df9",
  "_shrinkwrap": null,
  "_spec": "inflight@^1.0.4",
  "_where": "/Users/pdunkel1/Office/fsevents/fsevents/node_modules/glob",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/isaacs/inflight/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "once": "^1.3.0",
    "wrappy": "1"
  },
  "deprecated": false,
  "description": "Add callbacks to requests in flight to avoid async duplication",
  "devDependencies": {
    "tap": "^7.1.2"
  },
  "files": [
    "inflight.js"
  ],
  "homepage": "https://github.com/isaacs/inflight",
  "license": "ISC",
  "main": "inflight.js",
  "name": "inflight",
  "optionalDependencies": {},
  "readme": "# inflight\n\nAdd callbacks to requests in flight to avoid async duplication\n\n## USAGE\n\n```javascript\nvar inflight = require('inflight')\n\n// some request that does some stuff\nfunction req(key, callback) {\n  // key is any random string.  like a url or filename or whatever.\n  //\n  // will return either a falsey value, indicating that the\n  // request for this key is already in flight, or a new callback\n  // which when called will call all callbacks passed to inflightk\n  // with the same key\n  callback = inflight(key, callback)\n\n  // If we got a falsey value back, then there's already a req going\n  if (!callback) return\n\n  // this is where you'd fetch the url or whatever\n  // callback is also once()-ified, so it can safely be assigned\n  // to multiple events etc.  First call wins.\n  setTimeout(function() {\n    callback(null, key)\n  }, 100)\n}\n\n// only assigns a single setTimeout\n// when it dings, all cbs get called\nreq('foo', cb1)\nreq('foo', cb2)\nreq('foo', cb3)\nreq('foo', cb4)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npm/inflight.git"
  },
  "scripts": {
    "test": "tap test.js --100"
  },
  "version": "1.0.6"
}
