{
  "_from": "color-convert@^1.9.0",
  "_id": "color-convert@1.9.1",
  "_inBundle": false,
  "_integrity": "sha512-mjGanIiwQJskCC18rPR6OmrZ6fm2Lc7PeGFYwCmy5J34wC6F1PzdGL6xeMfmgicfYcNLGuVFA3WzXtIDCQSZxQ==",
  "_location": "/npm/color-convert",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "color-convert@^1.9.0",
    "name": "color-convert",
    "escapedName": "color-convert",
    "rawSpec": "^1.9.0",
    "saveSpec": null,
    "fetchSpec": "^1.9.0"
  },
  "_requiredBy": [
    "/npm/ansi-styles"
  ],
  "_resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.1.tgz",
  "_shasum": "c1261107aeb2f294ebffec9ed9ecad529a6097ed",
  "_shrinkwrap": null,
  "_spec": "color-convert@^1.9.0",
  "_where": "/Users/rebecca/code/npm/node_modules/ansi-styles",
  "author": {
    "name": "Heather Arthur",
    "email": "fayearthur@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/Qix-/color-convert/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "color-name": "^1.1.1"
  },
  "deprecated": false,
  "description": "Plain color conversion functions",
  "devDependencies": {
    "chalk": "^1.1.1",
    "xo": "^0.11.2"
  },
  "files": [
    "index.js",
    "conversions.js",
    "css-keywords.js",
    "route.js"
  ],
  "homepage": "https://github.com/Qix-/color-convert#readme",
  "keywords": [
    "color",
    "colour",
    "convert",
    "converter",
    "conversion",
    "rgb",
    "hsl",
    "hsv",
    "hwb",
    "cmyk",
    "ansi",
    "ansi16"
  ],
  "license": "MIT",
  "name": "color-convert",
  "optionalDependencies": {},
  "readme": "# color-convert\n\n[![Build Status](https://travis-ci.org/Qix-/color-convert.svg?branch=master)](https://travis-ci.org/Qix-/color-convert)\n\nColor-convert is a color conversion library for JavaScript and node.\nIt converts all ways between `rgb`, `hsl`, `hsv`, `hwb`, `cmyk`, `ansi`, `ansi16`, `hex` strings, and CSS `keyword`s (will round to closest):\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hsl(140, 200, 100);             // [96, 48, 59]\nconvert.keyword.rgb('blue');                // [0, 0, 255]\n\nvar rgbChannels = convert.rgb.channels;     // 3\nvar cmykChannels = convert.cmyk.channels;   // 4\nvar ansiChannels = convert.ansi16.channels; // 1\n```\n\n# Install\n\n```console\n$ npm install color-convert\n```\n\n# API\n\nSimply get the property of the _from_ and _to_ conversion that you're looking for.\n\nAll functions have a rounded and unrounded variant. By default, return values are rounded. To get the unrounded (raw) results, simply tack on `.raw` to the function.\n\nAll 'from' functions have a hidden property called `.channels` that indicates the number of channels the function expects (not including alpha).\n\n```js\nvar convert = require('color-convert');\n\n// Hex to LAB\nconvert.hex.lab('DEADBF');         // [ 76, 21, -2 ]\nconvert.hex.lab.raw('DEADBF');     // [ 75.56213190997677, 20.653827952644754, -2.290532499330533 ]\n\n// RGB to CMYK\nconvert.rgb.cmyk(167, 255, 4);     // [ 35, 0, 98, 0 ]\nconvert.rgb.cmyk.raw(167, 255, 4); // [ 34.509803921568626, 0, 98.43137254901961, 0 ]\n```\n\n### Arrays\nAll functions that accept multiple arguments also support passing an array.\n\nNote that this does **not** apply to functions that convert from a color that only requires one value (e.g. `keyword`, `ansi256`, `hex`, etc.)\n\n```js\nvar convert = require('color-convert');\n\nconvert.rgb.hex(123, 45, 67);      // '7B2D43'\nconvert.rgb.hex([123, 45, 67]);    // '7B2D43'\n```\n\n## Routing\n\nConversions that don't have an _explicitly_ defined conversion (in [conversions.js](conversions.js)), but can be converted by means of sub-conversions (e.g. XYZ -> **RGB** -> CMYK), are automatically routed together. This allows just about any color model supported by `color-convert` to be converted to any other model, so long as a sub-conversion path exists. This is also true for conversions requiring more than one step in between (e.g. LCH -> **LAB** -> **XYZ** -> **RGB** -> Hex).\n\nKeep in mind that extensive conversions _may_ result in a loss of precision, and exist only to be complete. For a list of \"direct\" (single-step) conversions, see [conversions.js](conversions.js).\n\n# Contribute\n\nIf there is a new model you would like to support, or want to add a direct conversion between two existing models, please send us a pull request.\n\n# License\nCopyright &copy; 2011-2016, Heather Arthur and Josh Junon. Licensed under the [MIT License](LICENSE).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Qix-/color-convert.git"
  },
  "scripts": {
    "pretest": "xo",
    "test": "node test/basic.js"
  },
  "version": "1.9.1",
  "xo": {
    "rules": {
      "default-case": 0,
      "no-inline-comments": 0,
      "operator-linebreak": 0
    }
  }
}
