apply plugin: 'com.android.library'
apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 15
        versionCode 34
        versionName "1.6.2"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

dependencies {
    final SUPPORT_VERSION = '25.3.1'
    final JUNIT_VERSION = '4.12'
    final TRUTH_VERSION = '0.31'
    final ROBOLECTRIC_VERSION = '3.1.2'

    provided "com.android.support:appcompat-v7:$SUPPORT_VERSION"
    provided "com.android.support:support-v4:$SUPPORT_VERSION"
    provided "com.android.support:design:$SUPPORT_VERSION"

    testCompile "junit:junit:$JUNIT_VERSION"
    testCompile "com.google.truth:truth:$TRUTH_VERSION"
    testCompile "org.robolectric:robolectric:$ROBOLECTRIC_VERSION"
}
apply from: "https://raw.githubusercontent.com/xiaopansky/android-library-publish-to-jcenter/master/bintrayUpload.gradle"
//gradlew bintrayUpload
