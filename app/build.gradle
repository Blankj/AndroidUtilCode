apply plugin: 'com.android.application'

File signPropertiesFile = rootProject.file('sign/keystore.properties')

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.blankj.androidutilcode"
        minSdkVersion 15
        targetSdkVersion 16
        versionCode 34
        versionName "1.6.2"
    }

    if (signPropertiesFile.exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(signPropertiesFile))
        signingConfigs {
            release {
                storeFile rootProject.file(properties['keystore'])
                storePassword properties['storePassword']
                keyAlias properties['keyAlias']
                keyPassword properties['keyPassword']
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (signPropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    final SUPPORT_VERSION = '25.3.1'
    final LEAKCANARY_VERSION = '1.5';

    def leakCanary = "com.squareup.leakcanary:leakcanary-android-no-op:$LEAKCANARY_VERSION"

    compile project(':utilcode')
    compile "com.android.support:appcompat-v7:$SUPPORT_VERSION"
    compile "com.android.support:support-v4:$SUPPORT_VERSION"
    compile "com.android.support:design:$SUPPORT_VERSION"

    // LeakCanary
    debugCompile "com.squareup.leakcanary:leakcanary-android:$LEAKCANARY_VERSION"
    releaseCompile leakCanary
    testCompile leakCanary
}


