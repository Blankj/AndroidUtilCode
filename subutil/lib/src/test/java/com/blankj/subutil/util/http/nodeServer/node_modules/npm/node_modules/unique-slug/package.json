{
  "_from": "unique-slug@^2.0.0",
  "_id": "unique-slug@2.0.0",
  "_inBundle": false,
  "_integrity": "sha1-22Z258fMBimHj/GWCXx4hVrp9Ks=",
  "_location": "/npm/unique-slug",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "unique-slug@^2.0.0",
    "name": "unique-slug",
    "escapedName": "unique-slug",
    "rawSpec": "^2.0.0",
    "saveSpec": null,
    "fetchSpec": "^2.0.0"
  },
  "_requiredBy": [
    "/npm/cacache/unique-filename",
    "/npm/unique-filename"
  ],
  "_resolved": "https://registry.npmjs.org/unique-slug/-/unique-slug-2.0.0.tgz",
  "_shasum": "db6676e7c7cc0629878ff196097c78855ae9f4ab",
  "_shrinkwrap": null,
  "_spec": "unique-slug@^2.0.0",
  "_where": "/Users/rebecca/code/npm/node_modules/unique-filename",
  "author": {
    "name": "Rebecca Turner",
    "email": "me@re-becca.org",
    "url": "http://re-becca.org"
  },
  "bugs": {
    "url": "https://github.com/iarna/unique-slug/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "imurmurhash": "^0.1.4"
  },
  "deprecated": false,
  "description": "Generate a unique character string suitible for use in files and URLs.",
  "devDependencies": {
    "standard": "^5.4.1",
    "tap": "^2.3.1"
  },
  "homepage": "https://github.com/iarna/unique-slug#readme",
  "keywords": [],
  "license": "ISC",
  "main": "index.js",
  "name": "unique-slug",
  "optionalDependencies": {},
  "readme": "unique-slug\n===========\n\nGenerate a unique character string suitible for use in files and URLs.\n\n```\nvar uniqueSlug = require('unique-slug')\n\nvar randomSlug = uniqueSlug()\nvar fileSlug = uniqueSlug('/etc/passwd')\n```\n\n### uniqueSlug(*str*) â†’ String (8 chars)\n\nIf *str* is passed in then the return value will be its murmur hash in\nhex.\n\nIf *str* is not passed in, it will be 4 bytes coverted into 8 hex\ncharacters, generated by `crypto.pseudoRandomBytes`.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/iarna/unique-slug.git"
  },
  "scripts": {
    "test": "standard && tap --coverage test"
  },
  "version": "2.0.0"
}
