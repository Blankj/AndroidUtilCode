{
  "_from": "npm-logical-tree@^1.2.1",
  "_id": "npm-logical-tree@1.2.1",
  "_inBundle": false,
  "_integrity": "sha512-AJI/qxDB2PWI4LG1CYN579AY1vCiNyWfkiquCsJWqntRu/WwimVrC8yXeILBFHDwxfOejxewlmnvW9XXjMlYIg==",
  "_location": "/npm/npm-logical-tree",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "npm-logical-tree@^1.2.1",
    "name": "npm-logical-tree",
    "escapedName": "npm-logical-tree",
    "rawSpec": "^1.2.1",
    "saveSpec": null,
    "fetchSpec": "^1.2.1"
  },
  "_requiredBy": [
    "/npm/libcipm",
    "/npm/libnpm"
  ],
  "_resolved": "https://registry.npmjs.org/npm-logical-tree/-/npm-logical-tree-1.2.1.tgz",
  "_shasum": "44610141ca24664cad35d1e607176193fd8f5b88",
  "_shrinkwrap": null,
  "_spec": "npm-logical-tree@^1.2.1",
  "_where": "/Users/rebecca/code/npm/node_modules/libcipm",
  "author": {
    "name": "Kat MarchÃ¡n",
    "email": "kzm@sykosomatic.org"
  },
  "bugs": {
    "url": "https://github.com/npm/logical-tree/issues"
  },
  "bundleDependencies": false,
  "config": {
    "nyc": {
      "exclude": [
        "node_modules/**",
        "test/**"
      ]
    }
  },
  "contributors": [
    {
      "name": "Rebecca Turner",
      "email": "me@re-becca.org"
    }
  ],
  "dependencies": {},
  "deprecated": false,
  "description": "Calculate 'logical' trees from a package.json + package-lock",
  "devDependencies": {
    "bluebird": "^3.5.1",
    "nyc": "^11.1.0",
    "standard": "^10.0.2",
    "standard-version": "^4.2.0",
    "tap": "^10.7.0",
    "weallbehave": "^1.2.0",
    "weallcontribute": "^1.0.8"
  },
  "files": [
    "*.js"
  ],
  "homepage": "https://github.com/npm/logical-tree#readme",
  "keywords": [
    "npm",
    "package manager"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "npm-logical-tree",
  "optionalDependencies": {},
  "readme": "# npm-logical-tree [![npm version](https://img.shields.io/npm/v/npm-logical-tree.svg)](https://npm.im/npm-logical-tree) [![license](https://img.shields.io/npm/l/npm-logical-tree.svg)](https://npm.im/npm-logical-tree) [![Travis](https://img.shields.io/travis/npm/logical-tree.svg)](https://travis-ci.org/npm/logical-tree) [![AppVeyor](https://ci.appveyor.com/api/projects/status/github/npm/logical-tree?svg=true)](https://ci.appveyor.com/project/npm/logical-tree) [![Coverage Status](https://coveralls.io/repos/github/npm/logical-tree/badge.svg?branch=latest)](https://coveralls.io/github/npm/logical-tree?branch=latest)\n\n[`npm-logical-tree`](https://github.com/npm/npm-logical-tree) is a Node.js\nlibrary that takes the contents of a `package.json` and `package-lock.json` (or\n`npm-shrinkwrap.json`) and returns a nested tree data structure representing the\nlogical relationships between the different dependencies.\n\n## Install\n\n`$ npm install npm-logical-tree`\n\n## Table of Contents\n\n* [Example](#example)\n* [Contributing](#contributing)\n* [API](#api)\n  * [`logicalTree`](#logical-tree)\n  * [`logicalTree.node`](#make-node)\n  * [`tree.isRoot`](#is-root)\n  * [`tree.addDep`](#add-dep)\n  * [`tree.delDep`](#del-dep)\n  * [`tree.getDep`](#get-dep)\n  * [`tree.path`](#path)\n  * [`tree.hasCycle`](#has-cycle)\n  * [`tree.forEach`](#for-each)\n  * [`tree.forEachAsync`](#for-each-async)\n\n### Example\n\n```javascript\nconst fs = require('fs')\nconst logicalTree = require('npm-logical-tree')\n\nconst pkg = require('./package.json')\nconst pkgLock = require('./package-lock.json')\n\nlogicalTree(pkg, pkgLock)\n// returns:\nLogicalTree {\n  name: 'npm-logical-tree',\n  version: '1.0.0',\n  address: null,\n  optional: false,\n  dev: false,\n  bundled: false,\n  resolved: undefined,\n  integrity: undefined,\n  requiredBy: Set { },\n  dependencies:\n   Map {\n     'foo' => LogicalTree {\n       name: 'foo',\n       version: '1.2.3',\n       address: 'foo',\n       optional: false,\n       dev: true,\n       bundled: false,\n       resolved: 'https://registry.npmjs.org/foo/-/foo-1.2.3.tgz',\n       integrity: 'sha1-rYUK/p261/SXByi0suR/7Rw4chw=',\n       dependencies: Map { ... },\n       requiredBy: Set { ... },\n     },\n     ...\n  }\n}\n```\n\n### Contributing\n\nThe npm team enthusiastically welcomes contributions and project participation!\nThere's a bunch of things you can do if you want to contribute! The [Contributor\nGuide](CONTRIBUTING.md) has all the information you need for everything from\nreporting bugs to contributing entire new features. Please don't hesitate to\njump in if you'd like to, or even ask us questions if something isn't clear.\n\nAll participants and maintainers in this project are expected to follow [Code of\nConduct](CODE_OF_CONDUCT.md), and just generally be excellent to each other.\n\nPlease refer to the [Changelog](CHANGELOG.md) for project history details, too.\n\nHappy hacking!\n\n### API\n\n#### <a name=\"logical-tree\"></a> `> logicalTree(pkg, lock) -> LogicalTree`\n\nCalculates a logical tree based on a matching `package.json` and\n`package-lock.json` pair. A \"logical tree\" is a fully-nested dependency graph\nfor an npm package, as opposed to a physical tree which might be flattened.\n\n`logical-tree` will represent deduplicated/flattened nodes using the same object\nthroughout the tree, so duplication can be checked by object identity.\n\n##### Example\n\n```javascript\nconst pkg = require('./package.json')\nconst pkgLock = require('./package-lock.json')\n\nlogicalTree(pkg, pkgLock)\n// returns:\nLogicalTree {\n  name: 'npm-logical-tree',\n  version: '1.0.0',\n  address: null,\n  optional: false,\n  dev: false,\n  bundled: false,\n  resolved: undefined,\n  integrity: undefined,\n  requiredBy: Set { },\n  dependencies:\n   Map {\n     'foo' => LogicalTree {\n       name: 'foo',\n       version: '1.2.3',\n       address: 'foo',\n       optional: false,\n       dev: true,\n       bundled: false,\n       resolved: 'https://registry.npmjs.org/foo/-/foo-1.2.3.tgz',\n       integrity: 'sha1-rYUK/p261/SXByi0suR/7Rw4chw=',\n       requiredBy: Set { ... },\n       dependencies: Map { ... }\n     },\n     ...\n  }\n}\n```\n\n#### <a name=\"make-node\"></a> `> logicalTree.node(name, [address, [opts]]) -> LogicalTree`\n\nManually creates a new LogicalTree node.\n\n##### Options\n\n* `opts.version` - version of the node.\n* `opts.optional` - is this node an optionalDep?\n* `opts.dev` - is this node a devDep?\n* `opts.bundled` - is this bundled?\n* `opts.resolved` - resolved address.\n* `opts.integrity` - SRI string.\n\n##### Example\n```javascript\nlogicalTree.node('hello', 'subpath:to:@foo/bar', {dev: true})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npm/logical-tree.git"
  },
  "scripts": {
    "postrelease": "npm publish && git push --follow-tags",
    "prerelease": "npm t",
    "pretest": "standard lib test *.js",
    "release": "standard-version -s",
    "test": "nyc --all -- tap -J test/*.js",
    "update-coc": "weallbehave -o . && git add CODE_OF_CONDUCT.md && git commit -m 'docs(coc): updated CODE_OF_CONDUCT.md'",
    "update-contrib": "weallcontribute -o . && git add CONTRIBUTING.md && git commit -m 'docs(contributing): updated CONTRIBUTING.md'"
  },
  "version": "1.2.1"
}
