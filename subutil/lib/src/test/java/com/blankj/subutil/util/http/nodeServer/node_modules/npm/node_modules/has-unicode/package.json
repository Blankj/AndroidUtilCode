{
  "_args": [
    [
      "has-unicode@2.0.1",
      "/Users/rebecca/code/npm"
    ]
  ],
  "_from": "has-unicode@2.0.1",
  "_id": "has-unicode@2.0.1",
  "_inBundle": false,
  "_integrity": "sha1-4Ob+aijPUROIVeCG0Wkedx3iqLk=",
  "_location": "/npm/has-unicode",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "has-unicode@2.0.1",
    "name": "has-unicode",
    "escapedName": "has-unicode",
    "rawSpec": "2.0.1",
    "saveSpec": null,
    "fetchSpec": "2.0.1"
  },
  "_requiredBy": [
    "/npm",
    "/npm/gauge"
  ],
  "_resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
  "_shrinkwrap": null,
  "_spec": "2.0.1",
  "_where": "/Users/rebecca/code/npm",
  "author": {
    "name": "Rebecca Turner",
    "email": "me@re-becca.org"
  },
  "bugs": {
    "url": "https://github.com/iarna/has-unicode/issues"
  },
  "dependencies": {},
  "description": "Try to guess if your terminal supports unicode",
  "devDependencies": {
    "require-inject": "^1.3.0",
    "tap": "^2.3.1"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/iarna/has-unicode",
  "keywords": [
    "unicode",
    "terminal"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "has-unicode",
  "optionalDependencies": {},
  "readme": "has-unicode\n===========\n\nTry to guess if your terminal supports unicode\n\n```javascript\nvar hasUnicode = require(\"has-unicode\")\n\nif (hasUnicode()) {\n  // the terminal probably has unicode support\n}\n```\n```javascript\nvar hasUnicode = require(\"has-unicode\").tryHarder\nhasUnicode(function(unicodeSupported) {\n  if (unicodeSupported) {\n    // the terminal probably has unicode support\n  }\n})\n```\n\n## Detecting Unicode\n\nWhat we actually detect is UTF-8 support, as that's what Node itself supports.\nIf you have a UTF-16 locale then you won't be detected as unicode capable.\n\n### Windows\n\nSince at least Windows 7, `cmd` and `powershell` have been unicode capable,\nbut unfortunately even then it's not guaranteed. In many localizations it\nstill uses legacy code pages and there's no facility short of running\nprograms or linking C++ that will let us detect this. As such, we\nreport any Windows installation as NOT unicode capable, and recommend\nthat you encourage your users to override this via config.\n\n### Unix Like Operating Systems\n\nWe look at the environment variables `LC_ALL`, `LC_CTYPE`, and `LANG` in\nthat order.  For `LC_ALL` and `LANG`, it looks for `.UTF-8` in the value. \nFor `LC_CTYPE` it looks to see if the value is `UTF-8`.  This is sufficient\nfor most POSIX systems.  While locale data can be put in `/etc/locale.conf`\nas well, AFAIK it's always copied into the environment.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/iarna/has-unicode.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "2.0.1"
}
