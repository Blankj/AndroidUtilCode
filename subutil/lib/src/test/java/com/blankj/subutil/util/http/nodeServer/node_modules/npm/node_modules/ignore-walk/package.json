{
  "_from": "ignore-walk@^3.0.1",
  "_id": "ignore-walk@3.0.1",
  "_inBundle": false,
  "_integrity": "sha512-DTVlMx3IYPe0/JJcYP7Gxg7ttZZu3IInhuEhbchuqneY9wWe5Ojy2mXLBaQFUQmo0AW2r3qG7m1mg86js+gnlQ==",
  "_location": "/npm/ignore-walk",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "ignore-walk@^3.0.1",
    "name": "ignore-walk",
    "escapedName": "ignore-walk",
    "rawSpec": "^3.0.1",
    "saveSpec": null,
    "fetchSpec": "^3.0.1"
  },
  "_requiredBy": [
    "/npm/npm-packlist"
  ],
  "_resolved": "https://registry.npmjs.org/ignore-walk/-/ignore-walk-3.0.1.tgz",
  "_shasum": "a83e62e7d272ac0e3b551aaa82831a19b69f82f8",
  "_shrinkwrap": null,
  "_spec": "ignore-walk@^3.0.1",
  "_where": "/Users/rebecca/code/npm/node_modules/npm-packlist",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/isaacs/ignore-walk/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "minimatch": "^3.0.4"
  },
  "deprecated": false,
  "description": "Nested/recursive `.gitignore`/`.npmignore` parsing and filtering.",
  "devDependencies": {
    "mkdirp": "^0.5.1",
    "mutate-fs": "^1.1.0",
    "rimraf": "^2.6.1",
    "tap": "^10.7.2"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/isaacs/ignore-walk#readme",
  "keywords": [
    "ignorefile",
    "ignore",
    "file",
    ".gitignore",
    ".npmignore",
    "glob"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "ignore-walk",
  "optionalDependencies": {},
  "readme": "# ignore-walk\n\n[![Build\nStatus](https://travis-ci.org/isaacs/ignore-walk.svg?branch=master)](https://travis-ci.org/isaacs/ignore-walk)\n\nNested/recursive `.gitignore`/`.npmignore` parsing and filtering.\n\nWalk a directory creating a list of entries, parsing any `.ignore`\nfiles met along the way to exclude files.\n\n## USAGE\n\n```javascript\nconst walk = require('ignore-walk')\n\n// All options are optional, defaults provided.\n\n// this function returns a promise, but you can also pass a cb\n// if you like that approach better.\nwalk({\n  path: '...', // root dir to start in. defaults to process.cwd()\n  ignoreFiles: [ '.gitignore' ], // list of filenames. defaults to ['.ignore']\n  includeEmpty: true|false, // true to include empty dirs, default false\n  follow: true|false // true to follow symlink dirs, default false\n}, callback)\n\n// to walk synchronously, do it this way:\nconst result = walk.sync({ path: '/wow/such/filepath' })\n```\n\nIf you want to get at the underlying classes, they're at `walk.Walker`\nand `walk.WalkerSync`.\n\n## OPTIONS\n\n* `path` The path to start in.  Defaults to `process.cwd()`\n\n* `ignoreFiles` Filenames to treat as ignore files.  The default is\n  `['.ignore']`.  (This is where you'd put `.gitignore` or\n  `.npmignore` or whatever.)  If multiple ignore files are in a\n  directory, then rules from each are applied in the order that the\n  files are listed.\n\n* `includeEmpty` Set to `true` to include empty directories, assuming\n  they are not excluded by any of the ignore rules.  If not set, then\n  this follows the standard `git` behavior of not including\n  directories that are empty.\n\n    Note: this will cause an empty directory to be included if it\n    would contain an included entry, even if it would have otherwise\n    been excluded itself.\n\n    For example, given the rules `*` (ignore everything) and `!/a/b/c`\n    (re-include the entry at `/a/b/c`), the directory `/a/b` will be\n    included if it is empty.\n\n* `follow`  Set to `true` to treat symbolically linked directories as\n  directories, recursing into them.  There is no handling for nested\n  symlinks, so `ELOOP` errors can occur in some cases when using this\n  option.  Defaults to `false`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/isaacs/ignore-walk.git"
  },
  "scripts": {
    "postpublish": "git push origin --all; git push origin --tags",
    "postversion": "npm publish",
    "preversion": "npm test",
    "test": "tap test/*.js --100"
  },
  "version": "3.0.1"
}
