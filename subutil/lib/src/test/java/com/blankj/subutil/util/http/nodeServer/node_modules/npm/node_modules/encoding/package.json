{
  "_from": "encoding@^0.1.11",
  "_id": "encoding@0.1.12",
  "_inBundle": false,
  "_integrity": "sha1-U4tm8+5izRq1HsMjgp0flIDHS+s=",
  "_location": "/npm/encoding",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "encoding@^0.1.11",
    "name": "encoding",
    "escapedName": "encoding",
    "rawSpec": "^0.1.11",
    "saveSpec": null,
    "fetchSpec": "^0.1.11"
  },
  "_requiredBy": [
    "/npm/node-fetch-npm"
  ],
  "_resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.12.tgz",
  "_shasum": "538b66f3ee62cd1ab51ec323829d1f9480c74beb",
  "_shrinkwrap": null,
  "_spec": "encoding@^0.1.11",
  "_where": "/Users/rebecca/code/npm/node_modules/node-fetch-npm",
  "author": {
    "name": "Andris Reinman"
  },
  "bugs": {
    "url": "https://github.com/andris9/encoding/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "iconv-lite": "~0.4.13"
  },
  "deprecated": false,
  "description": "Convert encodings, uses iconv by default and fallbacks to iconv-lite if needed",
  "devDependencies": {
    "iconv": "~2.1.11",
    "nodeunit": "~0.9.1"
  },
  "homepage": "https://github.com/andris9/encoding#readme",
  "license": "MIT",
  "main": "lib/encoding.js",
  "name": "encoding",
  "optionalDependencies": {},
  "readme": "# Encoding\n\n**encoding** is a simple wrapper around [node-iconv](https://github.com/bnoordhuis/node-iconv) and [iconv-lite](https://github.com/ashtuchkin/iconv-lite/) to convert strings from one encoding to another. If node-iconv is not available for some reason,\niconv-lite will be used instead of it as a fallback.\n\n[![Build Status](https://secure.travis-ci.org/andris9/encoding.svg)](http://travis-ci.org/andris9/Nodemailer)\n[![npm version](https://badge.fury.io/js/encoding.svg)](http://badge.fury.io/js/encoding)\n\n## Install\n\nInstall through npm\n\n    npm install encoding\n\n## Usage\n\nRequire the module\n\n    var encoding = require(\"encoding\");\n\nConvert with encoding.convert()\n\n    var resultBuffer = encoding.convert(text, toCharset, fromCharset);\n\nWhere\n\n  * **text** is either a Buffer or a String to be converted\n  * **toCharset** is the characterset to convert the string\n  * **fromCharset** (*optional*, defaults to UTF-8) is the source charset\n\nOutput of the conversion is always a Buffer object.\n\nExample\n\n    var result = encoding.convert(\"ÕÄÖÜ\", \"Latin_1\");\n    console.log(result); //<Buffer d5 c4 d6 dc>\n\n## iconv support\n\nBy default only iconv-lite is bundled. If you need node-iconv support, you need to add it\nas an additional dependency for your project:\n\n    ...,\n    \"dependencies\":{\n        \"encoding\": \"*\",\n        \"iconv\": \"*\"\n    },\n    ...\n\n## License\n\n**MIT**\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/andris9/encoding.git"
  },
  "scripts": {
    "test": "nodeunit test"
  },
  "version": "0.1.12"
}
