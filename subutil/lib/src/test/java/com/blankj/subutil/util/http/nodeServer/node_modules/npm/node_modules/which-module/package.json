{
  "_from": "which-module@^2.0.0",
  "_id": "which-module@2.0.0",
  "_inBundle": false,
  "_integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=",
  "_location": "/npm/which-module",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "which-module@^2.0.0",
    "name": "which-module",
    "escapedName": "which-module",
    "rawSpec": "^2.0.0",
    "saveSpec": null,
    "fetchSpec": "^2.0.0"
  },
  "_requiredBy": [
    "/npm/yargs"
  ],
  "_resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",
  "_shasum": "d9ef07dce77b9902b8a3a8fa4b31c3e3f7e6e87a",
  "_shrinkwrap": null,
  "_spec": "which-module@^2.0.0",
  "_where": "/Users/rebecca/code/npm/node_modules/yargs",
  "author": {
    "name": "nexdrew"
  },
  "bugs": {
    "url": "https://github.com/nexdrew/which-module/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Find the module object for something that was require()d",
  "devDependencies": {
    "ava": "^0.19.1",
    "coveralls": "^2.13.1",
    "nyc": "^10.3.0",
    "standard": "^10.0.2",
    "standard-version": "^4.0.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/nexdrew/which-module#readme",
  "keywords": [
    "which",
    "module",
    "exports",
    "filename",
    "require",
    "reverse",
    "lookup"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "which-module",
  "optionalDependencies": {},
  "readme": "# which-module\n\n> Find the module object for something that was require()d\n\n[![Build Status](https://travis-ci.org/nexdrew/which-module.svg?branch=master)](https://travis-ci.org/nexdrew/which-module)\n[![Coverage Status](https://coveralls.io/repos/github/nexdrew/which-module/badge.svg?branch=master)](https://coveralls.io/github/nexdrew/which-module?branch=master)\n[![Standard Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)\n\nFind the `module` object in `require.cache` for something that was `require()`d\nor `import`ed - essentially a reverse `require()` lookup.\n\nUseful for libs that want to e.g. lookup a filename for a module or submodule\nthat it did not `require()` itself.\n\n## Install and Usage\n\n```\nnpm install --save which-module\n```\n\n```js\nconst whichModule = require('which-module')\n\nconsole.log(whichModule(require('something')))\n// Module {\n//   id: '/path/to/project/node_modules/something/index.js',\n//   exports: [Function],\n//   parent: ...,\n//   filename: '/path/to/project/node_modules/something/index.js',\n//   loaded: true,\n//   children: [],\n//   paths: [ '/path/to/project/node_modules/something/node_modules',\n//            '/path/to/project/node_modules',\n//            '/path/to/node_modules',\n//            '/path/node_modules',\n//            '/node_modules' ] }\n```\n\n## API\n\n### `whichModule(exported)`\n\nReturn the [`module` object](https://nodejs.org/api/modules.html#modules_the_module_object),\nif any, that represents the given argument in the `require.cache`.\n\n`exported` can be anything that was previously `require()`d or `import`ed as a\nmodule, submodule, or dependency - which means `exported` is identical to the\n`module.exports` returned by this method.\n\nIf `exported` did not come from the `exports` of a `module` in `require.cache`,\nthen this method returns `null`.\n\n## License\n\nISC Â© Contributors\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nexdrew/which-module.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "pretest": "standard",
    "release": "standard-version",
    "test": "nyc ava"
  },
  "version": "2.0.0"
}
