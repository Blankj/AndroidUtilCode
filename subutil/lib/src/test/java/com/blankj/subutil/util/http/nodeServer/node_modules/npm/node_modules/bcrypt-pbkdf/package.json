{
  "_from": "bcrypt-pbkdf@^1.0.0",
  "_id": "bcrypt-pbkdf@1.0.2",
  "_inBundle": false,
  "_integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
  "_location": "/npm/bcrypt-pbkdf",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "bcrypt-pbkdf@^1.0.0",
    "name": "bcrypt-pbkdf",
    "escapedName": "bcrypt-pbkdf",
    "rawSpec": "^1.0.0",
    "saveSpec": null,
    "fetchSpec": "^1.0.0"
  },
  "_requiredBy": [
    "/npm/sshpk"
  ],
  "_resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
  "_shasum": "a4301d389b6a43f9b67ff3ca11a3f6637e360e9e",
  "_shrinkwrap": null,
  "_spec": "bcrypt-pbkdf@^1.0.0",
  "_where": "/Users/zkat/Documents/code/work/npm/node_modules/sshpk",
  "bugs": {
    "url": "https://github.com/joyent/node-bcrypt-pbkdf/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "tweetnacl": "^0.14.3"
  },
  "deprecated": false,
  "description": "Port of the OpenBSD bcrypt_pbkdf function to pure JS",
  "devDependencies": {},
  "homepage": "https://github.com/joyent/node-bcrypt-pbkdf#readme",
  "license": "BSD-3-Clause",
  "main": "index.js",
  "name": "bcrypt-pbkdf",
  "optionalDependencies": {},
  "readme": "Port of the OpenBSD `bcrypt_pbkdf` function to pure Javascript. `npm`-ified\nversion of [Devi Mandiri's port](https://github.com/devi/tmp/blob/master/js/bcrypt_pbkdf.js),\nwith some minor performance improvements. The code is copied verbatim (and\nun-styled) from Devi's work.\n\nThis product includes software developed by Niels Provos.\n\n## API\n\n### `bcrypt_pbkdf.pbkdf(pass, passlen, salt, saltlen, key, keylen, rounds)`\n\nDerive a cryptographic key of arbitrary length from a given password and salt,\nusing the OpenBSD `bcrypt_pbkdf` function. This is a combination of Blowfish and\nSHA-512.\n\nSee [this article](http://www.tedunangst.com/flak/post/bcrypt-pbkdf) for\nfurther information.\n\nParameters:\n\n * `pass`, a Uint8Array of length `passlen`\n * `passlen`, an integer Number\n * `salt`, a Uint8Array of length `saltlen`\n * `saltlen`, an integer Number\n * `key`, a Uint8Array of length `keylen`, will be filled with output\n * `keylen`, an integer Number\n * `rounds`, an integer Number, number of rounds of the PBKDF to run\n\n### `bcrypt_pbkdf.hash(sha2pass, sha2salt, out)`\n\nCalculate a Blowfish hash, given SHA2-512 output of a password and salt. Used as\npart of the inner round function in the PBKDF.\n\nParameters:\n\n * `sha2pass`, a Uint8Array of length 64\n * `sha2salt`, a Uint8Array of length 64\n * `out`, a Uint8Array of length 32, will be filled with output\n\n## License\n\nThis source form is a 1:1 port from the OpenBSD `blowfish.c` and `bcrypt_pbkdf.c`.\nAs a result, it retains the original copyright and license. The two files are\nunder slightly different (but compatible) licenses, and are here combined in\none file. For each of the full license texts see `LICENSE`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/joyent/node-bcrypt-pbkdf.git"
  },
  "version": "1.0.2"
}
