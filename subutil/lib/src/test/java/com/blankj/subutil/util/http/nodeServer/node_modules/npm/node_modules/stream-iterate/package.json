{
  "_from": "stream-iterate@^1.1.0",
  "_id": "stream-iterate@1.2.0",
  "_inBundle": false,
  "_integrity": "sha1-K9fHcpbBcCpGSIuK1B95hl7s1OE=",
  "_location": "/npm/stream-iterate",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.3",
    "isarray": "1.0.0",
    "process-nextick-args": "2.0.0",
    "safe-buffer": "5.1.2",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "stream-iterate@^1.1.0",
    "name": "stream-iterate",
    "escapedName": "stream-iterate",
    "rawSpec": "^1.1.0",
    "saveSpec": null,
    "fetchSpec": "^1.1.0"
  },
  "_requiredBy": [
    "/npm/sorted-union-stream"
  ],
  "_resolved": "https://registry.npmjs.org/stream-iterate/-/stream-iterate-1.2.0.tgz",
  "_shasum": "2bd7c77296c1702a46488b8ad41f79865eecd4e1",
  "_shrinkwrap": null,
  "_spec": "stream-iterate@^1.1.0",
  "_where": "/Users/rebecca/code/npm/node_modules/sorted-union-stream",
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/stream-iterate/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "readable-stream": "^2.1.5",
    "stream-shift": "^1.0.0"
  },
  "deprecated": false,
  "description": "Iterate through the values of a stream",
  "devDependencies": {
    "from2": "^1.3.0",
    "standard": "^3.3.2",
    "tape": "^4.0.0"
  },
  "homepage": "https://github.com/mafintosh/stream-iterate",
  "license": "MIT",
  "main": "index.js",
  "name": "stream-iterate",
  "optionalDependencies": {},
  "readme": "# stream-iterate\n\nIterate through the values in a stream.\n\n```\nnpm install stream-iterate\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/stream-iterate.svg?style=flat)](http://travis-ci.org/mafintosh/stream-iterate)\n\n## Usage\n\n``` js\nvar iterate = require('stream-iterate')\nvar from = require('from2')\n\nvar stream = from.obj(['a', 'b', 'c'])\n\nvar read = iterate(stream)\n\nloop()\n\n// recursively iterates through each item in the stream\nfunction loop () {\n  read(function (err, data, next) {\n    console.log(err, data)\n    next()\n    loop()\n  })\n}\n```\n\nIf you don't call `next` and call `read` again the same `(err, value)` pair will be returned.\n\nYou can use this module to implement stuff like [a streaming merge sort](https://github.com/mafintosh/stream-iterate/blob/master/test.js#L5-L47).\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/stream-iterate.git"
  },
  "scripts": {
    "test": "standard && tape test.js"
  },
  "version": "1.2.0"
}
